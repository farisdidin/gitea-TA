<div class="header-wrapper">
{{with .Repository}}
	<div class="ui container">
		<div class="repo-header">
			<div class="ui huge breadcrumb repo-title">
				{{if .RelAvatarLink}}
				<img class="ui avatar image" src="{{.RelAvatarLink}}">
				{{else}}
				<i class="mega-octicon octicon-{{if .IsPrivate}}lock{{else if .IsMirror}}repo-clone{{else if .IsFork}}repo-forked{{else}}repo{{end}}"></i>
				{{end}}
				<a href="{{AppSubUrl}}/{{.Owner.Name}}">{{.Owner.Name}}</a>
				<div class="divider"> / </div>
				<a href="{{$.RepoLink}}">{{.Name}}</a>
				{{if and .RelAvatarLink .IsPrivate}}<i class="mega-octicon octicon-lock"></i>{{end}}
				{{if .IsTemplate}}<i class="icon fa-copy"></i>{{end}}
				{{if .IsArchived}}<i class="archive icon archived-icon"></i>{{end}}
				{{if .IsMirror}}<div class="fork-flag">{{$.i18n.Tr "repo.mirror_from"}} <a target="_blank" rel="noopener noreferrer" href="{{MirrorAddress $.Mirror}}">{{MirrorAddress $.Mirror}}</a></div>{{end}}
				{{if .IsFork}}<div class="fork-flag">{{$.i18n.Tr "repo.forked_from"}} <a href="{{.BaseRepo.Link}}">{{SubStr .BaseRepo.RelLink 1 -1}}</a></div>{{end}}
				{{if .IsGenerated}}<div class="fork-flag">{{$.i18n.Tr "repo.generated_from"}} <a href="{{.TemplateRepo.Link}}">{{SubStr .TemplateRepo.RelLink 1 -1}}</a></div>{{end}}
			</div>
			{{if not .IsBeingCreated}}
				<div class="hidden" id="button_check" name="{{.Name}}" url="{{AppSubUrl}}"></div>
				<div class="repo-buttons">
					<div id="div_remove_button">
						<button id="remove_button"  class="ui tiny red button" >REMOVE</button>

					</div>
					<div id="create_repo_button" class="ui dropdown jump item poping up"  data-variation="tiny inverted">
						<span class="text">
							<span>CREATE</span>
							<i class="fitted octicon octicon-triangle-down not-mobile"></i>
						</span>
						<div class="menu">
							<a class="item protocol" url="{{AppSubUrl}}/api/v1/local/create/ftp/{{.Name}}">
								FTP
							</a>
							<a class="item protocol" url="{{AppSubUrl}}/api/v1/local/create/tftp/{{.Name}}">
								TFTP
							</a>
							
						</div>
					</div>
					
					<div class="ui labeled button" tabindex="0">
						<a class="ui compact basic button" href="{{$.RepoLink}}/action/{{if $.IsWatchingRepo}}un{{end}}watch?redirect_to={{$.Link}}">
							<i class="icon fa-eye{{if not $.IsWatchingRepo}}-slash{{end}}"></i>{{if $.IsWatchingRepo}}{{$.i18n.Tr "repo.unwatch"}}{{else}}{{$.i18n.Tr "repo.watch"}}{{end}}
						</a>
						<a class="ui basic label" href="{{.Link}}/watchers">
							{{.NumWatches}}
						</a>
					</div>
					<div class="ui labeled button" tabindex="0">
						<a class="ui compact basic button" href="{{$.RepoLink}}/action/{{if $.IsStaringRepo}}un{{end}}star?redirect_to={{$.Link}}">
							<i class="icon star{{if not $.IsStaringRepo}} outline{{end}}"></i>{{if $.IsStaringRepo}}{{$.i18n.Tr "repo.unstar"}}{{else}}{{$.i18n.Tr "repo.star"}}{{end}}
						</a>
						<a class="ui basic label" href="{{.Link}}/stars">
							{{.NumStars}}
						</a>
					</div>
					{{if and (not .IsEmpty) ($.Permission.CanRead $.UnitTypeCode)}}
						<div class="ui labeled button {{if and ($.IsSigned) (not $.CanSignedUserFork)}}disabled-repo-button{{end}}" tabindex="0">
							<a class="ui compact basic button {{if or (not $.IsSigned) (not $.CanSignedUserFork)}}poping up{{end}}" {{if $.CanSignedUserFork}}href="{{AppSubUrl}}/repo/fork/{{.ID}}"{{else if $.IsSigned}} data-content="{{$.i18n.Tr "repo.fork_from_self"}}" {{ else }} data-content="{{$.i18n.Tr "repo.fork_guest_user" }}" rel="nofollow" href="{{AppSubUrl}}/user/login?redirect_to={{AppSubUrl}}/repo/fork/{{.ID}}" {{end}} data-position="top center" data-variation="tiny">
								<i class="octicon octicon-repo-forked"></i>{{$.i18n.Tr "repo.fork"}}
							</a>
							<a class="ui basic label" href="{{.Link}}/forks">
								{{.NumForks}}
							</a>
						</div>
					{{end}}
				</div>
			{{end}}
		</div><!-- end grid -->
	</div><!-- end container -->
{{end}}
	<div class="ui tabs container">
		{{if not .Repository.IsBeingCreated}}
			<div class="ui tabular stackable menu navbar">
				{{if .Permission.CanRead $.UnitTypeCode}}
				<a class="{{if .PageIsViewCode}}active{{end}} item" href="{{.RepoLink}}{{if (ne .BranchName .Repository.DefaultBranch)}}/src/{{.BranchNameSubURL | EscapePound}}{{end}}">
					<i class="octicon octicon-code"></i> {{.i18n.Tr "repo.code"}}
				</a>
				{{end}}

				{{if .Permission.CanRead $.UnitTypeIssues}}
					<a class="{{if .PageIsIssueList}}active{{end}} item" href="{{.RepoLink}}/issues">
						<i class="octicon octicon-issue-opened"></i> {{.i18n.Tr "repo.issues"}} <span class="ui {{if not .Repository.NumOpenIssues}}gray{{else}}blue{{end}} small label">{{.Repository.NumOpenIssues}}</span>
					</a>
				{{end}}

				{{if .Permission.CanRead $.UnitTypeExternalTracker}}
					<a class="{{if .PageIsIssueList}}active{{end}} item" href="{{.RepoExternalIssuesLink}}" target="_blank" rel="noopener noreferrer">
						<i class="octicon octicon-link-external"></i> {{.i18n.Tr "repo.issues"}} </span>
					</a>
				{{end}}

				{{if and .Repository.CanEnablePulls (.Permission.CanRead $.UnitTypePullRequests)}}
					<a class="{{if .PageIsPullList}}active{{end}} item" href="{{.RepoLink}}/pulls">
						<i class="octicon octicon-git-pull-request"></i> {{.i18n.Tr "repo.pulls"}} <span class="ui {{if not .Repository.NumOpenPulls}}gray{{else}}blue{{end}} small label">{{.Repository.NumOpenPulls}}</span>
					</a>
				{{end}}

				{{if and (.Permission.CanRead $.UnitTypeReleases) (not .IsEmptyRepo) }}
				<a class="{{if .PageIsReleaseList}}active{{end}} item" href="{{.RepoLink}}/releases">
					<i class="octicon octicon-tag"></i> {{.i18n.Tr "repo.releases"}} <span class="ui {{if not .Repository.NumReleases}}gray{{else}}blue{{end}} small label">{{.Repository.NumReleases}}</span>
				</a>
				{{end}}

				{{if or (.Permission.CanRead $.UnitTypeWiki) (.Permission.CanRead $.UnitTypeExternalWiki)}}
					<a class="{{if .PageIsWiki}}active{{end}} item" href="{{.RepoLink}}/wiki" {{if (.Permission.CanRead $.UnitTypeExternalWiki)}} target="_blank" rel="noopener noreferrer" {{end}}>
						<i class="octicon octicon-book"></i> {{.i18n.Tr "repo.wiki"}}
					</a>
				{{end}}

				{{if and (.Permission.CanReadAny $.UnitTypePullRequests $.UnitTypeIssues $.UnitTypeReleases) (not .IsEmptyRepo)}}
					<a class="{{if .PageIsActivity}}active{{end}} item" href="{{.RepoLink}}/activity">
						<i class="octicon octicon-pulse"></i> {{.i18n.Tr "repo.activity"}}
					</a>
				{{end}}

				{{template "custom/extra_tabs" .}}

				{{if .Permission.IsAdmin}}
					<div class="right menu">
						<a class="{{if .PageIsSettings}}active{{end}} item" href="{{.RepoLink}}/settings">
							<i class="octicon octicon-tools"></i> {{.i18n.Tr "repo.settings"}}
						</a>
					</div>
				{{end}}
			</div>
		{{end}}
	</div>
	<div class="ui tabs divider"></div>
</div>
<script
  src="https://code.jquery.com/jquery-3.4.1.slim.js"
  integrity="sha256-BTlTdQO9/fascB1drekrDVkaKd9PkwBymMlHOiG+qLI="
  crossorigin="anonymous"></script>

<script>
	$(document).ready(function(){
		var repo_name = $('#button_check').attr('name')
		var url = $('#button_check').attr('url')
		var full_url = url.concat('/api/v1/local/directory/',repo_name)
		$.ajax({
			type: "GET",
			url: full_url,
			crossDomain: true,
			dataType: "json",
			success : function(data){
				console.log(data)
				if(data['result']){
					$('#create_repo_button').hide();
					
				}else{
					$('#div_remove_button').hide();

				}
			},
			error : function(){
				console.log('error')
			}

		});

		$('#remove_button').on('click', function(){
			var url = $('#button_check').attr('url')
			var name = $('#button_check').attr('name')
			var full_url = url.concat('/api/v1/local/remove/', name);
			console.log(full_url)
			$.ajax({
					beforeSend: function(response){ 
					response.setRequestHeader("Authorization", "token 5b297d2d0f6e7c6f5d7a7a8de53a776ae008c386");
					
					},
					type: "GET",
					url: full_url,
					crossDomain: true,
					dataType: "json",
					headers: {
						'Access-Control-Allow-Origin': '*'
					},
					success : function(data){
						location.reload()
						console.log('success')
					},
					error : function(data){
						console.log('error')
					},
				});
		})

		$('.protocol').each(function(index){
			$(this).on('click', function(){
				console.log($(this).attr("url"))
				var api_url = $(this).attr("url")
				$.ajax({
					beforeSend: function(response){ 
					response.setRequestHeader("Authorization", "token 5b297d2d0f6e7c6f5d7a7a8de53a776ae008c386");
					
					},
					type: "GET",
					url: api_url,
					crossDomain: true,
					dataType: "json",
					headers: {
						'Access-Control-Allow-Origin': '*'
					},
					success : function(data){
						location.reload()
						console.log('success')
					},
					error : function(data){
						console.log('error')
					},
				}); 
			})
		});

	})
</script>